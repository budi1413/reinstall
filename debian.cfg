d-i debian-installer/language string en
d-i debian-installer/country string US
d-i debian-installer/locale string en_US.UTF-8
d-i keyboard-configuration/xkb-keymap select us

d-i netcfg/hostname string localhost

d-i mirror/protocol string http
d-i mirror/country string us
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian

d-i passwd/root-login boolean true
d-i passwd/root-password password ''
d-i passwd/root-password-again password ''
d-i passwd/make-user boolean false

d-i clock-setup/utc boolean true
d-i time/zone string Asia/Kuala_Lumpur
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string time.google.com

d-i partman-auto/method string regular
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman-efi/non_efi_system boolean true
d-i partman-basicfilesystems/no_swap boolean false

d-i partman-auto/expert_recipe_efi string efi :: \
    106 1 106 free \
    $iflabel{ gpt } method{ efi } format{ } . \
    1 1 -1 $default_filesystem \
    method{ format } format{ } use_filesystem{ } $default_filesystem{ } mountpoint{ / } .
    
d-i partman-auto/expert_recipe_bios string bios :: \
    1 1 1 free \
    $iflabel{ gpt } method{ biosgrub } . \
    1 1 -1 $default_filesystem \
    method{ format } format{ } use_filesystem{ } $default_filesystem{ } mountpoint{ / } .

d-i base-installer/install-recommends boolean true
d-i base-installer/kernel/image string linux-image-cloud-amd64

d-i apt-setup/non-free-firmware boolean true
d-i apt-setup/non-free boolean no
d-i apt-setup/contrib boolean no
d-i apt-setup/services-select multiselect security, updates
d-i apt-setup/security_host string security.debian.org

d-i pkgsel/run_tasksel boolean false
d-i pkgsel/include string openssh-server traceroute curl wget
popularity-contest popularity-contest/participate boolean false

d-i grub-installer/force-efi-extra-removable boolean true
d-i finish-install/reboot_in_progress note

d-i preseed/early_command string true; \
    if [ -d /cdrom/simple-cdd ]; then anna-install simple-cdd-profiles; fi

d-i partman/early_command string true; \
    eval "$(grep -o 'extra_confhome=[^ ]*' /proc/cmdline | sed 's/^extra_//')"; \

    postinst=/var/lib/dpkg/info/bootstrap-base.postinst; \
    cp $postinst $postinst.orig; \
    true >$postinst; \

    swapfile=/target/swapfile; \
    mem=$(grep ^MemTotal: /proc/meminfo | { read -r _ y _; echo "$y"; }); \
    mem=$((mem / 1024)); \
    swap_size=$((512 - mem)); \
    [ $swap_size -gt 0 ] && echo "fallocate -l ${swap_size}M $swapfile; mkswap $swapfile; swapon $swapfile" >>$postinst; \

    echo "swapoff -a; rm -f $swapfile" >/usr/lib/finish-install.d/95swapoff; \
    chmod a+x /usr/lib/finish-install.d/95swapoff; \

    echo "rm -rf /target/boot/efi/*; $postinst.orig" >>$postinst; \

    xda=$(sh /get-xda.sh); \
    debconf-set partman-auto/disk "/dev/$xda"; \
    debconf-set grub-installer/bootdev "/dev/$xda"; \
    rm -rf /usr/sbin/fdisk /usr/sbin/sfdisk; \

    ttys=$(sh /ttys.sh console=); \
    debconf-set debian-installer/add-kernel-opts "$ttys"; \

    eths=$(cd /dev/netconf/ && ls); \

    sh /can_use_cloud_kernel.sh "$xda" $eths || debconf-set base-installer/kernel/image "$(debconf-get base-installer/kernel/image | sed 's/-cloud//')"; \

    [ -d /sys/firmware/efi ] && debconf-set partman-auto/expert_recipe "$(debconf-get partman-auto/expert_recipe_efi)"; \
    [ -d /sys/firmware/efi ] || debconf-set partman-auto/expert_recipe "$(debconf-get partman-auto/expert_recipe_bios)"; \

    debconf-set passwd/root-password-crypted "$(cat /configs/password-linux-sha512)"; \

    true >/bin/os-prober

d-i preseed/late_command string true; \
    for str in $(grep -wo "extra_[^ ]*" /proc/cmdline | sed 's/^extra_//'); do eval "$str"; done; \

    if [ "$elts" = 1 ]; then sed -i "s|deb\.freexian\.com/extended-lts|$deb_mirror|" /target/etc/apt/sources.list; fi; \

    if [ "$link_grub_dir" = 1 ]; then ln -s grub /target/boot/grub2; fi; \

    in-target systemctl enable ssh; \

    if [ -s /configs/ssh_keys ]; then \
        (umask 077; mkdir -p /target/root/.ssh; cat /configs/ssh_keys >/target/root/.ssh/authorized_keys); \
        in-target passwd -d root; \
    else \
        echo "PermitRootLogin yes" >>/target/etc/ssh/sshd_config; \
    fi; \

    if [ -n "$ssh_port" ] && ! [ "$ssh_port" = 22 ]; then \
        echo "Port $ssh_port" >>/target/etc/ssh/sshd_config; \
    fi; \

    if [ -s /configs/frpc.toml ]; then \
        url=$(sh /get-frpc-url.sh linux); \
        basename=$(echo "$url" | sed 's,.*/,,' | sed 's,\.tar\.gz,,'); \
        mkdir -p /target/usr/local/bin; \
        mkdir -p /target/usr/local/etc/frpc; \
        for i in {1..5}; do \
            wget -O /target/frpc.tar.gz "$url" && break; \
        done; \
        tar xzf /target/frpc.tar.gz "$basename/frpc" -O >/target/usr/local/bin/frpc; \
        rm -f /target/frpc.tar.gzx; \
        chmod a+x /target/usr/local/bin/frpc; \
        cp /configs/frpc.toml /target/usr/local/etc/frpc/; \
        cp /frpc.service /target/etc/systemd/system/; \
        in-target systemctl enable frpc; \
    fi; \

    cp /fix-eth-name.sh /target/; \
    cp /fix-eth-name.service /target/etc/systemd/system/; \
    in-target systemctl enable fix-eth-name;
